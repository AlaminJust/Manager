@model IList<LocalMealManagement.Models.Groups>


<div class="card-deck mt-4 ml-md-5" style="display:inline-flex; align-items:center">

    @foreach (var item in Model)
    {
        <div class="row justify-content-center">
            <div class="col-auto mb-3">
                <div class="card shadow" style="width: 30rem;">
                    <div class="card-header">
                        <h3>@item.GroupName</h3>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-sm-6">
                                <img class="card-img-top" src="~/Images/massgroup.jpg" style="width:100px; height:100px" />
                            </div>
                            <div class="col-sm-6">
                                <h3>Alamin Hossain</h3>
                            </div>
                        </div>
                    </div>

                    <div class="card-footer text-center">
                        <a asp-controller="GroupAdministration" asp-action="SpecificGroupTask" asp-route-groupId="@item.GroupId" class="btn btn-primary">ManageGroup</a>
                        <a asp-controller="ManageGroup" asp-action="AddMemberInGroup" asp-route-groupId="@item.GroupId" class="btn btn-primary">Add Member</a>
                        <a asp-controller="ManageGroup" asp-action="MembersInGroup" asp-route-groupId="@item.GroupId" class="btn btn-primary">Members</a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>



@*<div id=swipeBox ontouchstart=touchStart(event,'swipeBox') ontouchmove="touchMove(event)" ontouchcancel="touchCancel(event)"> Hello </div>


<script type="text/javascript">
    // TOUCH-EVENTS SINGLE-FINGER SWIPE-SENSING JAVASCRIPT
    // Courtesy of PADILICIOUS.COM and MACOSXAUTOMATION.COM

    // this script can be used with one or more page elements to perform actions based on them being swiped with a single finger

    var triggerElementID = null; // this variable is used to identity the triggering element
    var fingerCount = 0;
    var startX = 0;
    var startY = 0;
    var curX = 0;
    var curY = 0;
    var deltaX = 0;
    var deltaY = 0;
    var horzDiff = 0;
    var vertDiff = 0;
    var minLength = 72; // the shortest distance the user may swipe
    var swipeLength = 0;
    var swipeAngle = null;
    var swipeDirection = null;
    var movementCount = 0;

    // The 4 Touch Event Handlers

    // NOTE: the touchStart handler should also receive the ID of the triggering element
    // make sure its ID is passed in the event call placed in the element declaration, like:
    // <div id="picture-frame" ontouchstart="touchStart(event,'picture-frame');"  ontouchend="touchEnd(event);" ontouchmove="touchMove(event);" ontouchcancel="touchCancel(event);">

    function touchStart(event, passedName) {
        console.log("Touched");
        // disable the standard ability to select the touched object
        event.preventDefault();
        // get the total number of fingers touching the screen
        fingerCount = event.touches.length;
        // since we're looking for a swipe (single finger) and not a gesture (multiple fingers),
        // check that only one finger was used
        if (fingerCount == 1) {
            // get the coordinates of the touch
            startX = event.touches[0].pageX;
            startY = event.touches[0].pageY;
            // store the triggering element ID
            triggerElementID = passedName;
        } else {
            // more than one finger touched so cancel
            touchCancel(event);
        }
    }

    function touchMove(event) {
        event.preventDefault();
        console.log("TouchMove");
        if (event.touches.length == 1 && movementCount < 20) {
            curX = event.touches[0].pageX;
            curY = event.touches[0].pageY;
            movementCount = movementCount + 1;
        } else {
            touchEnd(event);
            touchCancel(event);
        }
    }

    function touchEnd(event) {
        event.preventDefault();
        console.log("TouchedEnd");
        // check to see if more than one finger was used and that there is an ending coordinate
        if (fingerCount == 1 && curX != 0) {
            // use the Distance Formula to determine the length of the swipe
            swipeLength = Math.round(Math.sqrt(Math.pow(curX - startX, 2) + Math.pow(curY - startY, 2)));
            // if the user swiped more than the minimum length, perform the appropriate action
            if (swipeLength >= minLength) {
                caluculateAngle();
                determineSwipeDirection();
                processingRoutine();
                touchCancel(event); // reset the variables
            } else {
                touchCancel(event);
            }
        } else {
            touchCancel(event);
        }
    }

    function touchCancel(event) {
        // reset the variables back to default values
        console.log("Touch cancel");
        fingerCount = 0;
        startX = 0;
        startY = 0;
        curX = 0;
        curY = 0;
        deltaX = 0;
        deltaY = 0;
        horzDiff = 0;
        vertDiff = 0;
        swipeLength = 0;
        swipeAngle = null;
        swipeDirection = null;
        triggerElementID = null;
        movementCount = 0;
    }

    function caluculateAngle() {
        var X = startX - curX;
        var Y = curY - startY;
        var Z = Math.round(Math.sqrt(Math.pow(X, 2) + Math.pow(Y, 2))); //the distance - rounded - in pixels
        var r = Math.atan2(Y, X); //angle in radians (Cartesian system)
        swipeAngle = Math.round(r * 180 / Math.PI); //angle in degrees
        if (swipeAngle < 0) { swipeAngle = 360 - Math.abs(swipeAngle); }
    }

    function determineSwipeDirection() {
        if ((swipeAngle <= 45) && (swipeAngle >= 0)) {
            swipeDirection = 'left';
        } else if ((swipeAngle <= 360) && (swipeAngle >= 315)) {
            swipeDirection = 'left';
        } else if ((swipeAngle >= 135) && (swipeAngle <= 225)) {
            swipeDirection = 'right';
        } else if ((swipeAngle > 45) && (swipeAngle < 135)) {
            swipeDirection = 'down';
        } else {
            swipeDirection = 'up';
        }
    }

    function processingRoutine() {
        var swipedElement = document.getElementById(triggerElementID);
        if (swipeDirection == 'left') {
            // REPLACE WITH YOUR ROUTINES
            swipedElement.style.backgroundColor = "red";
        } else if (swipeDirection == 'right') {
            // REPLACE WITH YOUR ROUTINES
            swipedElement.style.backgroundColor = 'green';
        } else if (swipeDirection == 'up') {
            // REPLACE WITH YOUR ROUTINES
            swipedElement.style.backgroundColor = 'maroon';
        } else if (swipeDirection == 'down') {
            // REPLACE WITH YOUR ROUTINES
            swipedElement.style.backgroundColor = 'purple';
        }
    }

</script>*@
