@model IEnumerable<LocalMealManagement.ViewModel.AllCalculation>

@{
    ViewData["Title"] = "AllCalculation";
}

@{
    double Dinnar = 0, Lunch = 0, Morning = 0, TotalMeal = 0, mealRate = 0, TotCost = 0 , Liability = 0 , Balance = 0;
    var groupByUsername = from s in Model
                          group s by s.identityUser.UserName
                          into g
                          select new
                          {
                              UserName = g.Key,
                              Dinnar = g.Sum(x => x.Dinnar),
                              Lunch = g.Sum(x => x.Lunch),
                              Morning = g.Sum(x => x.Morning),
                              Taka = g.Sum(x => x.Taka),
                              TotalCost = g.Max(x => x.TotalCost)
                          };
    foreach (var res in groupByUsername)
    {
        Dinnar += res.Dinnar;
        Morning += res.Morning;
        Lunch += res.Lunch;
        TotCost = res.TotalCost;
        Balance += res.Taka;
    }
    TotalMeal = Dinnar + Morning + Lunch;
    mealRate = (TotCost / TotalMeal);
}

<div class="container" style="text-align:center; display:block; background-color:gold">
    <p>
        Meal Rate : @Math.Round(mealRate, 2, MidpointRounding.AwayFromZero) 
    </p>
</div>

<table class="table table-striped table-bordered container mt-5">
    <thead>
        <tr>
            <th>Username</th>
            <th>Morning</th>
            <th>Lunch</th>
            <th>Dinnar</th>
            <th>TotalMeal</th>
            <th>Balance</th>
            <th>TotalCost</th>
            <th>Liability</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in groupByUsername)
        {
            <tr>
                <td>@item.UserName</td>
                <td>@item.Morning</td>
                <td>@item.Lunch</td>
                <td>@item.Dinnar</td>
                <td>@Math.Round((item.Morning + item.Lunch + item.Dinnar),2,MidpointRounding.AwayFromZero)</td>
                <td>@item.Taka</td>
                <td>@Math.Round(mealRate*(item.Morning+item.Lunch+item.Dinnar),2,MidpointRounding.AwayFromZero)</td>
                <td>@Math.Round((item.Taka - (mealRate * (item.Morning + item.Lunch + item.Dinnar))),2,MidpointRounding.AwayFromZero)</td>
            </tr>
            Liability += (item.Taka - (mealRate * (item.Morning + item.Lunch + item.Dinnar)));
        }
    </tbody>
    <tfoot>
        <tr>
            <th>Username</th>
            <th>@Morning</th>
            <th>@Lunch</th>
            <th>@Dinnar</th>
            <th>@Math.Round(TotalMeal,2,MidpointRounding.AwayFromZero)</th>
            <th>@Math.Round(Balance,2,MidpointRounding.AwayFromZero)</th>
            <th>@Math.Round(TotCost,2,MidpointRounding.AwayFromZero)</th>
            <th>@Math.Round(Liability,2,MidpointRounding.AwayFromZero)</th>
        </tr>
    </tfoot>
</table>

